#? stdtmpl | standard
#
#func genPlayground*(
#  urls = $rand(100000..999999), filejson = "{}", code = "", htmlcomment = "", stdouts = "", target = "c", mode = "", gc = "",
#  stylecheck = "", exceptions = "", cpu = "", ssls = "off", threads = "off", python = "off", flto = "off", fastmath = "off", marchnative = "off", hardened = "off",
#  fontfamily = "Fira Code", hosting = "", fontsize = 15, expiration = 9, fsize = 0, astcode = "", dot = "", ccode = "", asmcode = "", cancompile = true,
#  recents: seq[seq[string]]): string =
<html lang="EN" class="has-navbar-fixed-top" style="font-family:'Titillium Web';background-color:#232733">
<head>
  <title>Nim Argentina</title>
  <meta charset="utf-8"/>
  <meta name="keywords" content="Nim Argentina">
  <meta name="generator" content="Nim">
  <meta name="description" content="Nim Argentina">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <link rel=icon type="image/x-icon" href="https://nim-lang.org/assets/img/logo_bw.png" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.8.0/css/bulma.min.css" crossorigin="anonymous">
  <link href="https://fonts.googleapis.com/css?family=Fira+Code|Oxygen+Mono|Roboto+Mono|Inconsolata|Ubuntu+Mono|Titillium+Web&display=swap" rel="stylesheet" crossorigin="anonymous">
</head>
  <body lang="en" id="page" lang="EN">
    <div class="container is-fluid has-text-white" id="content">
    <nav class="navbar is-fixed-top is-black">
      <div class="container">
        <div class="navbar-brand">
          <a class="navbar-item" href="https://nim-lang.org" target="_blank" rel="noopener noreferrer" title="Nim Playground (Unofficial)">
            <img src="https://play.nim-lang.org/assets/logo.svg"/>
          </a>
        </div>
        <div class="navbar-menu">
          <div class="navbar-start">
            <div class="navbar-item has-dropdown is-hoverable">
              <a class="navbar-link">Recent</a>
              <div class="navbar-dropdown">
            # if likely(recents.len > 0):
            #   for item in recents:
                  <a class="navbar-item navbar-item-dropdown is-small is-marginless is-paddingless" href="/${ item[0] }" target="_blank" rel="noopener noreferrer"> ${ item[0] } </a>
            #   end for
            # end if
              </div>
            </div>
            <div class="navbar-item has-dropdown is-hoverable">
              <a class="navbar-link">Chat</a>
              <div class="navbar-dropdown">
                <a class="navbar-item navbar-item-dropdown" href="https://gitter.im/nim-lang/Nim" target="_blank" rel="noopener noreferrer">English (International)</a>
                <a class="navbar-item navbar-item-dropdown" href="https://forum.nim-lang.org" target="_blank" rel="noopener noreferrer">Forum (International)</a>
                <a class="navbar-item navbar-item-dropdown" href="https://t.me/NimArgentina" target="_blank" rel="noopener noreferrer">Spanish (Americas)</a>
                <a class="navbar-item navbar-item-dropdown" href="https://t.me/NimParaguay" target="_blank" rel="noopener noreferrer">Spanish (Americas)</a>
                <a class="navbar-item navbar-item-dropdown" href="https://t.me/nimitalia" target="_blank" rel="noopener noreferrer">Italian (Europe)</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-cn.com" target="_blank" rel="noopener noreferrer">Chinese (Asia)</a>
                <a class="navbar-item navbar-item-dropdown" href="irc://freenode.net/nim" target="_blank" rel="noopener noreferrer">IRC</a>
                <a class="navbar-item navbar-item-dropdown" href="https://matrix.to/#/#freenode_#nim:matrix.org" target="_blank" rel="noopener noreferrer">Matrix</a>
                <a class="navbar-item navbar-item-dropdown" href="https://discord.gg/ezDFDw2" target="_blank" rel="noopener noreferrer">Discord</a>
                <a class="navbar-item navbar-item-dropdown" href="https://irclogs.nim-lang.org" target="_blank" rel="noopener noreferrer">Chat Logs</a>
              </div>
            </div>
            <div class="navbar-item has-dropdown is-hoverable">
              <a class="navbar-link">Docs</a>
              <div class="navbar-dropdown">
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/nim-lang/Nim/wiki/Nim-for-Python-Programmers#table-of-contents" target="_blank" rel="noopener noreferrer">Python Devs</a>
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/nim-lang/Nim/wiki/Nim-for-TypeScript-Programmers#table-of-contents" target="_blank" rel="noopener noreferrer">JavaScript Devs</a>
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/nim-lang/Nim/wiki/Nim-for-C-programmers" target="_blank" rel="noopener noreferrer">C / C++ Devs</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/tut1.html" target="_blank" rel="noopener noreferrer">Tutorial</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/theindex.html" target="_blank" rel="noopener noreferrer">TheIndex</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/lib.html" target="_blank" rel="noopener noreferrer">Standard Library</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/manual.html" target="_blank" rel="noopener noreferrer">Manual</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/gc.html" target="_blank" rel="noopener noreferrer">Memory Management</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/nep1.html" target="_blank" rel="noopener noreferrer">Style Guide</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.github.io/Nim" target="_blank" rel="noopener noreferrer">Bleeding Edge</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/hcr.html" target="_blank" rel="noopener noreferrer">Hot Code Reloading</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/docgen.html" target="_blank" rel="noopener noreferrer">Self-Documentator</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/nims.html" target="_blank" rel="noopener noreferrer">NimScript</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/tools.html" target="_blank" rel="noopener noreferrer">Built-in Tools</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/asyncdispatch.html" target="_blank" rel="noopener noreferrer">Async</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/docs/manual.html#threads" target="_blank" rel="noopener noreferrer">Threads</a>
              </div>
            </div>
            <div class="navbar-item has-dropdown is-hoverable">
              <a class="navbar-link">Social</a>
              <div class="navbar-dropdown">
                <a class="navbar-item navbar-item-dropdown" href="https://youtube.com/watch?v=zSXbifhuZSo&list=PLXIivpcMlfwAevvA4IvLIiYOujqSuyyKY" target="_blank" rel="noopener noreferrer">Youtube</a>
                <a class="navbar-item navbar-item-dropdown" href="https://twitter.com/nim_lang" target="_blank" rel="noopener noreferrer">Twitter</a>
                <a class="navbar-item navbar-item-dropdown" href="https://stackoverflow.com/questions/tagged/nim-lang" target="_blank" rel="noopener noreferrer">StackOverflow</a>
                <a class="navbar-item navbar-item-dropdown" href="https://twitch.tv/araq4k" target="_blank" rel="noopener noreferrer">Twitch</a>
                <a class="navbar-item navbar-item-dropdown" href="https://reddit.com/r/nim" target="_blank" rel="noopener noreferrer">Reddit</a>
                <a class="navbar-item navbar-item-dropdown" href="https://dev.to/t/nim" target="_blank" rel="noopener noreferrer">DevTo</a>
                <a class="navbar-item navbar-item-dropdown" href="https://gettogether.community/nim-argentina/" target="_blank" rel="noopener noreferrer">Get Together</a>
                <a class="navbar-item navbar-item-dropdown" href="https://www.meetup.com/Nim-Argentina" target="_blank" rel="noopener noreferrer">Meetup</a>
                <a class="navbar-item navbar-item-dropdown" href="https://exercism.io/my/tracks/nim" target="_blank" rel="noopener noreferrer">Exercism</a>
                <a class="navbar-item navbar-item-dropdown" href="https://code-golf.io/scores/all-holes/nim" target="_blank" rel="noopener noreferrer">Code Golf</a>
                <a class="navbar-item navbar-item-dropdown" href="https://www.codewars.com/?language=nim" target="_blank" rel="noopener noreferrer">Code Wars</a>
                <a class="navbar-item navbar-item-dropdown" href="http://rosettacode.org/wiki/Category:Nim" target="_blank" rel="noopener noreferrer">Rosetta Code</a>
                <a class="navbar-item navbar-item-dropdown" href="https://rosettagit.org/languages/nim/" target="_blank" rel="noopener noreferrer">Rosetta Git</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim.godbolt.org" target="_blank" rel="noopener noreferrer">Compiler Explorer</a>
                <a class="navbar-item navbar-item-dropdown" href="https://learnxinyminutes.com/docs/nim" target="_blank" rel="noopener noreferrer">Nim in 5 minutes</a>
                <a class="navbar-item navbar-item-dropdown" href="https://devdocs.io/nim" target="_blank" rel="noopener noreferrer">DevDocs</a>
              </div>
            </div>
            <div class="navbar-item has-dropdown is-hoverable">
              <a class="navbar-link"><h1><b> + </b></h1></a>
              <div class="navbar-dropdown">
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/install.html" target="_blank" rel="noopener noreferrer">Download</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/blog.html" target="_blank" rel="noopener noreferrer">Blog</a>
                <a class="navbar-item navbar-item-dropdown" href="https://planet.nim-lang.org" target="_blank" rel="noopener noreferrer">RSS</a>
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/nim-lang/Nim/wiki" target="_blank" rel="noopener noreferrer">Wiki</a>
                <a class="navbar-item navbar-item-dropdown" href="https://book.picheta.me" target="_blank" rel="noopener noreferrer">Book</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nimble.directory" target="_blank" rel="noopener noreferrer">Nimble</a>
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/dom96/choosenim#choosenim" target="_blank" rel="noopener noreferrer">ChooseNim</a>
                <a class="navbar-item navbar-item-dropdown" href="https://play.nim-lang.org" target="_blank" rel="noopener noreferrer">Playground</a>
                <a class="navbar-item navbar-item-dropdown" href="https://wandbox.org" target="_blank" rel="noopener noreferrer">Playground Alt 2</a>
                <a class="navbar-item navbar-item-dropdown" href="https://ide.judge0.com/?Xb_Q" target="_blank" rel="noopener noreferrer">Playground Alt 3</a>
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/moigagoo/nimage" target="_blank" rel="noopener noreferrer">Docker</a>
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/nim-lang/Nim/blob/devel/changelog.md" target="_blank" rel="noopener noreferrer">Devel Changelog</a>
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/nim-lang/nightlies/releases" target="_blank" rel="noopener noreferrer">Nightlies</a>
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/nim-lang/csources#nim-c-sources" target="_blank" rel="noopener noreferrer">Pure C Sources</a>
                <a class="navbar-item navbar-item-dropdown" href="https://github.com/juancarlospaco/nim-presentation-slides/tree/master/ejemplos" target="_blank" rel="noopener noreferrer">Examples</a>
                <a class="navbar-item navbar-item-dropdown" href="https://nim-lang.org/blog/2017/10/02/documenting-profiling-and-debugging-nim-code.html" target="_blank" rel="noopener noreferrer">Debugging</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </nav>

<form ${ if cancompile: " action='/compile' method='post' " else: "" } id="formnim" class="is-fullwidth is-paddingless">
<input type="radio" id="tab0" name="nav-tab" checked >
<input type="radio" id="tab1" name="nav-tab">
<input type="radio" id="tab2" name="nav-tab">
<input type="radio" id="tab3" name="nav-tab">
<input type="radio" id="tab4" name="nav-tab">
<input type="radio" id="tab5" name="nav-tab">
<input type="radio" id="tab6" name="nav-tab">
<input type="radio" id="tab7" name="nav-tab">
<div class="tabs is-centered is-boxed is-small is-fullwidth is-paddingless is-marginless is-unselectable has-text-primary">
  <ul>
    <li title="Nim source code"><label for="tab0"><a class="has-text-warning"> code.nim </a></label></li>
    <li title="JSON data to practice file I/O"><label for="tab1"><a class="has-text-warning"> file.json </a></label></li>
    <li title="Standard Output messages (Read-only)"><label for="tab2"><a class="has-text-warning"> Standard Output </a></label></li>
    <li title="Human readable comments (ReSTructuredText)"><label for="tab3"><a class="has-text-warning"> Comments </a></label></li>
# let tit = if target == "cpp": "C++" elif target == "js -d:nodejs" or target == "js": "JavaScript" elif target == "objc": "ObjectiveC" else: "C"
    <li title="Temporary Intermediate Representation (Read-only)"><label for="tab4"><a class="has-text-warning"> $tit </a></label></li>
    <li title="Machine Code (Read-only)"><label for="tab5"><a class="has-text-warning"> Assembly </a></label></li>
    <li title="Abstract Syntax Tree (Read-only)"><label for="tab6"><a class="has-text-warning"> AST </a></label></li>
    <li title="DOT Graphic visualization (SVG)"><label for="tab7"><a class="has-text-warning"> DOT </a></label></li>
  </ul>
</div>
<div class="tab-content">
  <div class="tab-pane content-tab0">
    <textarea id="code" name="code" class="textarea is-primary is-paddingless is-fullwidth" maxlength="999" placeholder=" Type or Paste your Nim source code" dir="auto" autofocus required spellcheck style="font-family:'$fontfamily';font-size:$fontsize;width:99%" rows="9" oninput="document.querySelector('#detailseditor').setAttribute('open','open')" onblur="document.querySelector('#code').value=document.querySelector('#code').value.trim()" nowrap="nowrap" wrap="off" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false">$code</textarea>
    <small id="stats" class="is-hidden-touch"></small><small><b>$fsize Kilobytes binary file size.</b></small>
  </div>
  <div class="tab-pane content-tab1">
    <textarea id="filejson" name="filejson" class="textarea is-paddingless is-fullwidth" rows="9" placeholder=" Type or Paste your JSON Data for 'file.json' (Optional, to use real I/O, the file can be read at compile time)" title="JSON Data for 'file.json'" dir="auto" style="font-family:'Fira Code'"  nowrap="nowrap" wrap="off" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" onmouseover="this.scrollTop=this.scrollHeight">$filejson</textarea>
  </div>
  <div class="tab-pane content-tab2">
    <textarea id="stdout" readonly class="textarea is-paddingless is-fullwidth" rows="9" placeholder=" Standard Output (Read-Only)" title="Standard Output (Read-Only)" dir="auto" style="font-family:'Fira Code';cursor:not-allowed"  nowrap="nowrap" wrap="off" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" onmouseover="this.scrollTop=this.scrollHeight">$stdouts</textarea><br>
  </div>
  <div class="tab-pane content-tab3">
  # if htmlcomment.len > 1 or not cancompile:
    <article class="has-background-light" style="min-height:9em"> $htmlcomment </article>
  # else:
    <textarea id="comment" name="comment" class="textarea is-paddingless is-fullwidth" rows="9" placeholder=" MarkDown and ReSTructuredText Comments (Optional)" title="MarkDown and ReSTructuredText Comments" dir="auto" style="font-family:'Fira Code'" onblur="this.value=this.value.trim()"  nowrap="nowrap" wrap="off" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"></textarea>
    <a class="is-hidden-touch" href="https://forum.nim-lang.org/about/rst" target="_blank" rel="noopener noreferrer">MarkDown and ReSTructuredText CheatSheet ?</a>
  # end if
  </div>
  <div class="tab-pane content-tab4">
    <textarea id="c" class="textarea is-paddingless is-fullwidth" readonly rows="9" placeholder="$tit code (Read-Only)" title="$tit Code (Read-Only)" dir="auto" style="font-family:'Fira Code';cursor:not-allowed" nowrap="nowrap" wrap="off" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" onmouseover="this.scrollTop=this.scrollHeight">$ccode</textarea>
    <a class="is-hidden-touch" href="https://en.wikipedia.org/wiki/Intermediate_representation" target="_blank" rel="noopener noreferrer">Temporary Intermediate Representation ?</a>
  </div>
  <div class="tab-pane content-tab5">
    <textarea id="asm" class="textarea is-paddingless is-fullwidth" readonly rows="9" placeholder=" Machine Code Assembly ASM (Read-Only)" title="Assembly (Read-Only)" dir="auto" style="font-family:'Fira Code';cursor:not-allowed" nowrap="nowrap" wrap="off" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" onmouseover="this.scrollTop=this.scrollHeight">$asmcode</textarea>
    <a class="is-hidden-touch" href="https://en.wikipedia.org/wiki/Assembly_language" target="_blank" rel="noopener noreferrer">Machine Code Assembly ?</a>
  </div>
  <div class="tab-pane content-tab6">
    <textarea id="ast" class="textarea is-paddingless is-fullwidth" readonly rows="9" placeholder=" Abstract Syntax Tree Nim AST (Read-Only)" title="Abstract Syntax Tree (Read-Only)" dir="auto" style="font-family:'Fira Code';cursor:not-allowed"  nowrap="nowrap" wrap="off" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" readonly >$astcode</textarea>
    <a class="is-hidden-touch" href="https://en.wikipedia.org/wiki/Abstract_syntax_tree" target="_blank" rel="noopener noreferrer">Abstract Syntax Tree ?</a>
  </div>
  <div class="tab-pane content-tab7">
    <center class="is-paddingless is-fullwidth is-hidden-touch" style="min-height:15em;max-width:99%"> $dot </center>
    <a class="is-hidden-touch" href="https://en.wikipedia.org/wiki/DOT_(graph_description_language)" target="_blank" rel="noopener noreferrer">DOT Graphs ?</a> (EXPERIMENTAL!)
  </div>
</div>
<style>
input[type="radio"], .tab-pane { display: none; }
input#tab0:checked ~ .tab-content > .content-tab0,input#tab1:checked ~ .tab-content > .content-tab1,input#tab2:checked ~ .tab-content > .content-tab2,
input#tab3:checked ~ .tab-content > .content-tab3,input#tab4:checked ~ .tab-content > .content-tab4,input#tab5:checked ~ .tab-content > .content-tab5,
input#tab6:checked ~ .tab-content > .content-tab6,input#tab7:checked ~ .tab-content > .content-tab7 { display: block; }
</style>
# if cancompile:
  <button class="button is-fullwidth" onmouseover="document.querySelector('#detailsnim').setAttribute('open','open')" onclick="this.classList.add('is-loading');this.disabled=true;document.querySelector('#formnim').submit()" title="AutoFormat, Save, Compile, Run" style="background-color:#ffe953"><b> C O M P I L E </b></button>
# else:
  <input type="url" class="input is-fullwidth is-warning is-large has-text-centered has-text-weight-bold" value="http://$hosting/$urls" title="Playground URL" style="background-color:#ffe953" onclick="this.select();document.execCommand('copy');" readonly autofocus >
# end if
<section class="section is-paddingless is-fullwidth">
  <details id="detailsnim" class="is-fullwidth is-marginless is-paddingless has-text-centered has-text-white" style="cursor:pointer;background-color:#2b2e3b">
    <summary class="has-background-black has-text-white is-unselectable"> Nim </summary>
      <div class="columns">

        <div class="column">
          <a href="https://nim-lang.org/docs/backends.html#introduction" target="_blank" rel="noopener noreferrer" title="Compiler Target"> Target </a><br>
            <div class="select is-small">
              <select id="target" name="target" title="Compiler Target" class="select is-small">
                <optgroup label="Backend">
                  <option value="c"            ${if target == "c": "selected" else: ""} >           C         </option>
                  <option value="cpp"          ${if target == "cpp": "selected" else: ""}>          C++       </option>
                  <option value="objc"         ${if target == "objcc": "selected" else: ""}>        ObjectiveC</option>
                  <option value="js -d:nodejs" ${if target == "js -d:nodejs": "selected" else: ""} disabled > NodeJS    </option>
                  <option disabled>             NimScript </option>
                  <option disabled>             LLVM IR   </option>
                </optgroup>
                <optgroup label="Frontend">
                  <option value="js" disabled  ${if target == "js": "selected" else: ""}>           JavaScript  </option>
                  <option disabled >  WASM </option>
                </optgroup>
                <optgroup label="Diagnostics">
                  <option value="check"        ${if target == "check": "selected" else: ""}>        Check </option>
                </optgroup>
              </select>
            </div>
          </div>

        <div class="column">
          <a href="https://nim-lang.org/docs/nimc.html#additional-compilation-switches" target="_blank" rel="noopener noreferrer" title="Optimization level"> Mode </a><br>
          <div class="select is-small">
            <select id="mode" name="mode" title="Optimization level" class="select is-small">
              <option value="" ${if mode == "": "selected" else: ""} > Debug  </option>
              <option value="-d:release" ${if mode == "-d:release": "selected" else: ""} > Release </option>
              <optgroup label="Advanced">
                <option value="-d:release -d:danger" ${if mode == "-d:release -d:danger": "selected" else: ""} > Danger </option>
              </optgroup>
            </select>
          </div>
        </div>

        <div class="column">
          <a href="https://nim-lang.org/docs/gc.html" target="_blank" rel="noopener noreferrer" title="Memory management"> Memory </a><br>
          <div class="select is-small">
            <select id="gc" name="gc" title="Memory management" class="select is-small">
              <option value=""                  ${if gc == "": "selected" else: ""} >                  Default    </option>
              <option value="--gc:refc"         ${if gc == "--gc:refc": "selected" else: ""} >         Ref Count  </option>
              <option value="--gc:boehm"        ${if gc == "--gc:boehm": "selected" else: ""} >        Boehm      </option>
              <option value="--gc:markAndSweep" ${if gc == "--gc:markAndSweep": "selected" else: ""} > Mark&Sweep </option>
              <option value="--gc:go"           ${if gc == "--gc:go": "selected" else: ""} >           Go lang    </option>
              <optgroup label="Advanced">
                <option value="--gc:none"       ${if gc == "--gc:none": "selected" else: ""} class="has-text-danger">    None    </option>
                <option value="--gc:regions"    ${if gc == "--gc:regions": "selected" else: ""} class="has-text-danger"> Regions </option>
                <option value="--gc:arc"        ${if gc == "--gc:arc": "selected" else: ""} >          ARC        </option>
                <option value="--gc:orc"        ${if gc == "--gc:orc": "selected" else: ""} >          ORC        </option>
              </optgroup>
            </select>
          </div>
        </div>

        <div class="column is-hidden-touch">
          <a href="https://nim-lang.org/docs/nep1.html#introduction" target="_blank" rel="noopener noreferrer" title="Code style"> CodeStyle </a><br>
          <div class="select is-small">
            <select id="stylecheck" name="stylecheck" title="Code style" class="select is-small">
              <option value=""                     ${if stylecheck == "": "selected" else: ""} > Default </option>
              <option value="--styleCheck:off"     ${if stylecheck == "--styleCheck:off": "selected" else: ""} >  Off   </option>
              <option value="--styleCheck:hint"    ${if stylecheck == "--styleCheck:hint": "selected" else: ""} > Hints </option>
              <optgroup label="Advanced">
                <option value="--styleCheck:error" ${if stylecheck == "--styleCheck:error": "selected" else: ""} class="has-text-danger"> Errors </option>
              </optgroup>
            </select>
          </div>
        </div>

        <div class="column is-hidden-touch">
          <a href="https://nim-lang.org/araq/gotobased_exceptions.html" target="_blank" rel="noopener noreferrer" title="Exception Handling"> Exceptions </a><br>
          <div class="select is-small">
            <select id="exceptions" name="exceptions" title="Exception Handling" class="select is-small">
              <option value=""                      ${if exceptions == "": "selected" else: ""}                    > Default </option>
              <option value="--exceptions:setjmp"   ${if exceptions == "--exceptions:setjmp": "selected" else: ""} > SetJmp  </option>
              <option value="--exceptions:goto"     ${if exceptions == "--exceptions:goto": "selected" else: ""}   > GOTO    </option>
              <optgroup label="Advanced">
                <option value="--exceptions:cpp"    ${if exceptions == "--exceptions:cpp": "selected" else: ""}    class="has-text-danger"> C++    </option>
                <option value="--exceptions:quirky" ${if exceptions == "--exceptions:quirky": "selected" else: ""} class="has-text-danger"> Quirky </option>
              </optgroup>
            </select>
          </div>
        </div>

        <div class="column is-hidden-touch">
          <a href="https://en.wikipedia.org/wiki/Cross_compiler" target="_blank" rel="noopener noreferrer" title="Exception Handling"> CPU </a><br>
          <div class="select is-small">
            <select id="cpu" name="cpu" title="CPU Hardware (CrossCompilation)" class="select is-small">
              <option value=""                                     ${if cpu == "": "selected" else: ""}                                     > x86 64Bit </option>
              <option value="--cpu:i386 --passC:-m32 --passL:-m32" ${if cpu == "--cpu:i386 --passC:-m32 --passL:-m32": "selected" else: ""} > x86 32Bit </option>
              <option disabled > ARM </option>
              <option disabled > AVR </option>
            </select>
          </div>
        </div>

        <div class="column is-hidden-touch has-text-left">
          <label id="label0" class="checkbox is-small is-unselectable" title="Enable OpenSSL & HTTPS -d:ssl">
            <input type="checkbox" class="checkbox is-small" id="ssl" name="ssl" ${if ssls == "on": "checked" else: ""} onchange="if(this.checked){document.querySelector('#label0').classList.add('has-text-success');document.querySelector('#label0').classList.remove('has-text-danger')}else{document.querySelector('#label0').classList.add('has-text-danger');document.querySelector('#label0').classList.remove('has-text-success')}" /> OpenSSL
          </label> <a href="https://nim-lang.org/docs/openssl.html" target="_blank" rel="noopener noreferrer">?</a>
          <br>
          <label id="label1" class="checkbox is-small is-unselectable" title="Enable Multi-Threading --threads:on">
            <input type="checkbox" class="checkbox is-small" id="threads" name="threads" ${if threads == "on": "checked" else: ""} onchange="if(this.checked){document.querySelector('#label1').classList.add('has-text-success');document.querySelector('#label1').classList.remove('has-text-danger')}else{document.querySelector('#label1').classList.add('has-text-danger');document.querySelector('#label1').classList.remove('has-text-success')}" /> Threads
          </label> <a href="https://nim-lang.org/docs/manual.html#threads" target="_blank" rel="noopener noreferrer">?</a>
          <br>
          <label id="label2" class="checkbox is-small is-unselectable" title="Run binary --run">
            <input type="checkbox" class="checkbox is-small" id="run" name="run" /> Run
          </label>
          <br>
          <label id="label3" class="checkbox is-small is-unselectable" title="Python syntax & Python export (Nimpy + Pylib)">
            <input type="checkbox" class="checkbox is-small" id="python" name="python" ${if python == "on": "checked" else: ""} />Python syntax
          </label>
        </div>

        <div class="column is-hidden-touch has-text-left">
          <label id="labela" class="checkbox is-small is-unselectable" title="GCC -flto" style="opacity:.75;cursor:not-allowed">
            <input type="checkbox" class="checkbox is-small" id="flto" name="flto" ${if flto == "on": "checked" else: ""} onchange="if(!this.checked){document.querySelector('#labela').classList.add('has-text-success');document.querySelector('#labela').classList.remove('has-text-danger')}else{document.querySelector('#labela').classList.add('has-text-danger');document.querySelector('#labela').classList.remove('has-text-success')}" />flto
          </label> <a href="https://gcc.gnu.org/wiki/LinkTimeOptimization#Background" target="_blank" rel="noopener noreferrer">?</a>
          <br>
          <label id="labelb" class="checkbox is-small is-unselectable" title="GCC -ffast-math" style="opacity:.75;cursor:not-allowed">
            <input type="checkbox" class="checkbox is-small" id="fastmath" name="fastmath" ${if fastmath == "on": "checked" else: ""} onchange="if(!this.checked){document.querySelector('#labelb').classList.add('has-text-success');document.querySelector('#labelb').classList.remove('has-text-danger')}else{document.querySelector('#labelb').classList.add('has-text-danger');document.querySelector('#labelb').classList.remove('has-text-success')}" />fast-math
          </label> <a href="https://gcc.gnu.org/wiki/FloatingPointMath" target="_blank" rel="noopener noreferrer">?</a>
          <br>
          <label id="labelc" class="checkbox is-small is-unselectable" title="GCC -march=native" style="opacity:.75;cursor:not-allowed">
            <input type="checkbox" class="checkbox is-small" id="marchnative" name="marchnative" ${if marchnative == "on": "checked" else: ""} onchange="if(!this.checked){document.querySelector('#labelc').classList.add('has-text-success');document.querySelector('#labelc').classList.remove('has-text-danger')}else{document.querySelector('#labelc').classList.add('has-text-danger');document.querySelector('#labelc').classList.remove('has-text-success')}" />arch=native
          </label> <a href="https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html" target="_blank" rel="noopener noreferrer">?</a>
          <br>
          <label id="labeld" class="checkbox is-small is-unselectable" title="Hardened Binary" style="opacity:.75;cursor:not-allowed">
            <input type="checkbox" class="checkbox is-small" id="hardened" name="hardened" ${if hardened == "on": "checked" else: ""} onchange="if(!this.checked){document.querySelector('#labeld').classList.add('has-text-success');document.querySelector('#labeld').classList.remove('has-text-danger')}else{document.querySelector('#labeld').classList.add('has-text-danger');document.querySelector('#labeld').classList.remove('has-text-success')}" />Hardened
          </label> <a href="https://en.wikipedia.org/wiki/Hardening_(computing)#Binary_hardening" target="_blank" rel="noopener noreferrer">?</a>
        </div>
      </div>
    </details>

<details id="detailseditor" class="is-fullwidth is-marginless is-paddingless has-text-centered has-text-white" style="cursor:pointer;background-color:#2b2e3b">
    <summary class="has-background-black has-text-white is-unselectable"> Editor </summary>
      <div class="columns">
        <div class="column">
          Size <br>
          <div class="is-small">
            <input type="number" id="fontsize" name="fontsize" class="input is-small" title="Font Size (Pixels)" list="defaultNumbers" value=$fontsize min=10 max=50 step=5 required maxlenght=2 onchange="document.querySelector('#code').style.fontSize=this.value" style="max-width:4em" />
            <datalist id="defaultNumbers">
              <option value=10 ></option>
              <option value=20 ></option>
              <option value=30 ></option>
              <option value=40 ></option>
              <option value=50 ></option>
            </datalist>
          </div>
        </div>

        <div class="column is-hidden-touch">
          Family <br>
          <div class="select is-small">
            <select id="fontfamily" name="fontfamily" title="Font Family (Monospace)" class="select is-small" onchange="document.querySelector('#code').style.fontFamily=this.options[this.selectedIndex].value">
              <option value="Fira Code"   ${if fontfamily == "Fira Code": "selected" else: ""}   >Fira Code</option>
              <option value="Oxygen Mono" ${if fontfamily == "Oxygen Mono": "selected" else: ""} >Oxygen</option>
              <option value="Roboto Mono" ${if fontfamily == "Roboto Mono": "selected" else: ""} >Roboto</option>
              <option value="Ubuntu Mono" ${if fontfamily == "Ubuntu Mono": "selected" else: ""} >Ubuntu</option>
              <option value="Inconsolata" ${if fontfamily == "Inconsolata": "selected" else: ""} >Inconsolata</option>
              <option value="Monospace"   ${if fontfamily == "Monospace": "selected" else: ""}   >Monospace</option>
              <option disabled >ComicSans</option>
            </select>
          </div>
        </div>

        <div class="column">
          URL <br>
          <input id="url" name="url" value=$urls class="input is-small" pattern="[a-zA-Z0-9_-]{4,9}" title="URL (ASCII)" placeholder="URL (ASCII, SEO URL)" type="text" onblur="this.value=this.value.trim()" style="max-width:10em">
        </div>

        <div class="column">
          Expiration <br>
          <input type="number" id="expiration" name="expiration" class="input is-small" list="defaultExpirations" value=$expiration min=9 max=99 step=1 required maxlenght=2 title="Expiration Days" style="max-width:4em" />
            <datalist id="defaultExpirations">
              <option value=9 ></option>
              <option value=14 ></option>
              <option value=30 ></option>
              <option value=60 ></option>
            </datalist>
        </div>

        <div class="column">
          Examples <br>
          <div class="select is-small">
            <select id="examples" title="Load 1 Example" onchange="document.querySelector('#code').value=this.options[this.selectedIndex].value">
              <option selected disabled >Code Snippets</option>
            # const exmpl = staticRead"examples.html".strip
              $exmpl
            </select>
          </div>
        </div>

        <div class="column">
          &nbsp; <br>
          <input class="button is-small" title="Reset" onclick="document.querySelector('#code').value=''" type="reset">
        </div>
      </div>
      <i class="is-clearfix"></i>
  </details>
  <a class="h5" href="https://t.me/NimArgentina" style="color:#ffdd57" target="_blank" rel="noopener noreferrer"> Creado por la comunidad Nim Argentina </a>
  </section>
</form>
</div>
</body>
</html>
<script>
//Behave
(function(undefined){'use strict';var BehaveHooks=BehaveHooks||(function(){var hooks={};return{add:function(hookName,fn){if(typeof hookName=="object"){var i;for(i=0;i<hookName.length;i+=1){var theHook=hookName[i];if(!hooks[theHook]){hooks[theHook]=[]}hooks[theHook].push(fn)}}else{if(!hooks[hookName]){hooks[hookName]=[]}hooks[hookName].push(fn)}},get:function(hookName){if(hooks[hookName]){return hooks[hookName]}}}})(),Behave=Behave||function(userOpts){if(typeof String.prototype.repeat!=='function'){String.prototype.repeat=function(times){if(times<1){return ''}if(times%2){return this.repeat(times-1)+this}var half=this.repeat(times/2);return half+half}}if(typeof Array.prototype.filter!=='function'){Array.prototype.filter=function(func ){if(this===null){throw new TypeError()}var t=Object(this),len=t.length>>>0;if(typeof func!="function"){throw new TypeError()}var res=[],thisp=arguments[1];for(var i=0;i<len;i+=1){if(i in t){var val=t[i];if(func.call(thisp,val,i,t)){res.push(val)}}}return res}}var defaults={textarea:null,replaceTab:true,softTabs:true,tabSize:4,autoOpen:true,overwrite:true,autoStrip:true,autoIndent:true,fence:false},tab,newLine,charSettings={keyMap:[{open:"\"",close:"\"",canBreak:false},{open:"'",close:"'",canBreak:false},{open:"(",close:")",canBreak:false},{open:"[",close:"]",canBreak:true},{open:"{",close:"}",canBreak:true}]},utils={_callHook:function(hookName,passData){var hooks=BehaveHooks.get(hookName);passData=typeof passData=="boolean"&&passData===false?false:true;if(hooks){if(passData){var theEditor=defaults.textarea,textVal=theEditor.value,caretPos=utils.cursor.get(),i;for(i=0;i<hooks.length;i+=1){hooks[i].call(undefined,{editor:{element:theEditor,text:textVal,levelsDeep:utils.levelsDeep()},caret:{pos:caretPos},lines:{current:utils.cursor.getLine(textVal,caretPos),total:utils.editor.getLines(textVal)}})}}else{for(i=0;i<hooks.length;i+=1){hooks[i].call(undefined)}}}},defineNewLine:function(){var ta=document.createElement('textarea');ta.value="\n";if(ta.value.length==2){newLine="\r\n"}else{newLine="\n"}},defineTabSize:function(tabSize){if(typeof defaults.textarea.style.OTabSize!="undefined"){defaults.textarea.style.OTabSize=tabSize;return}if(typeof defaults.textarea.style.MozTabSize!="undefined"){defaults.textarea.style.MozTabSize=tabSize;return}if(typeof defaults.textarea.style.tabSize!="undefined"){defaults.textarea.style.tabSize=tabSize;return}},cursor:{getLine:function(textVal,pos){return((textVal.substring(0,pos)).split("\n")).length},get:function(){if(typeof document.createElement('textarea').selectionStart==="number"){return defaults.textarea.selectionStart}else if(document.selection){var caretPos=0,range=defaults.textarea.createTextRange(),rangeDupe=document.selection.createRange().duplicate(),rangeDupeBookmark=rangeDupe.getBookmark();range.moveToBookmark(rangeDupeBookmark);while(range.moveStart('character',-1)!==0){caretPos+=1}return caretPos}},set:function(start,end){if(!end){end=start}if(defaults.textarea.setSelectionRange){defaults.textarea.focus();defaults.textarea.setSelectionRange(start,end)}else if(defaults.textarea.createTextRange){var range=defaults.textarea.createTextRange();range.collapse(true);range.moveEnd('character',end);range.moveStart('character',start);range.select()}},selection:function(){var textAreaElement=defaults.textarea,start=0,end=0,normalizedValue,range,textInputRange,len,endRange;if(typeof textAreaElement.selectionStart=="number"&&typeof textAreaElement.selectionEnd=="number"){start=textAreaElement.selectionStart;end=textAreaElement.selectionEnd}else{range=document.selection.createRange();if(range&&range.parentElement()==textAreaElement){normalizedValue=utils.editor.get();len=normalizedValue.length;textInputRange=textAreaElement.createTextRange();textInputRange.moveToBookmark(range.getBookmark());endRange=textAreaElement.createTextRange();endRange.collapse(false);if(textInputRange.compareEndPoints("StartToEnd",endRange)>-1){start=end=len}else{start= -textInputRange.moveStart("character",-len);start+=normalizedValue.slice(0,start).split(newLine).length-1;if(textInputRange.compareEndPoints("EndToEnd",endRange)>-1){end=len}else{end= -textInputRange.moveEnd("character",-len);end+=normalizedValue.slice(0,end).split(newLine).length-1}}}}return start==end?false:{start:start,end:end}}},editor:{getLines:function(textVal){return(textVal).split("\n").length},get:function(){return defaults.textarea.value.replace(/\r/g,'')},set:function(data){defaults.textarea.value=data}},fenceRange:function(){if(typeof defaults.fence=="string"){var data=utils.editor.get(),pos=utils.cursor.get(),hacked=0,matchedFence=data.indexOf(defaults.fence),matchCase=0;while(matchedFence>=0){matchCase+=1;if(pos<(matchedFence+hacked)){break}hacked+=matchedFence+defaults.fence.length;data=data.substring(matchedFence+defaults.fence.length);matchedFence=data.indexOf(defaults.fence)}if((hacked)<pos&&((matchedFence+hacked)>pos)&&matchCase%2===0){return true}return false}else{return true}},isEven:function(_this,i){return i%2},levelsDeep:function(){var pos=utils.cursor.get(),val=utils.editor.get();var left=val.substring(0,pos),levels=0,i,j;for(i=0;i<left.length;i+=1){for(j=0;j<charSettings.keyMap.length;j+=1){if(charSettings.keyMap[j].canBreak){if(charSettings.keyMap[j].open==left.charAt(i)){levels+=1}if(charSettings.keyMap[j].close==left.charAt(i)){levels-=1}}}}var toDecrement=0,quoteMap=["'","\""];for(i=0;i<charSettings.keyMap.length;i+=1){if(charSettings.keyMap[i].canBreak){for(j in quoteMap){toDecrement+=left.split(quoteMap[j]).filter(utils.isEven).join('').split(charSettings.keyMap[i].open).length-1}}}var finalLevels=levels-toDecrement;return finalLevels>=0?finalLevels:0},deepExtend:function(destination,source){for(var property in source){if(source[property]&&source[property].constructor&&source[property].constructor===Object){destination[property]=destination[property]||{};utils.deepExtend(destination[property],source[property])}else{destination[property]=source[property]}}return destination},addEvent:function addEvent(element,eventName,func){if(element.addEventListener){element.addEventListener(eventName,func,false)}else if(element.attachEvent){element.attachEvent("on"+eventName,func)}},removeEvent:function addEvent(element,eventName,func){if(element.addEventListener){element.removeEventListener(eventName,func,false)}else if(element.attachEvent){element.detachEvent("on"+eventName,func)}},preventDefaultEvent:function(e){if(e.preventDefault){e.preventDefault()}else{e.returnValue=false}}},intercept={tabKey:function(e){if(!utils.fenceRange()){return}if(e.keyCode==9){utils.preventDefaultEvent(e);var toReturn=true;utils._callHook('tab:before');var selection=utils.cursor.selection(),pos=utils.cursor.get(),val=utils.editor.get();if(selection){var tempStart=selection.start;while(tempStart--){if(val.charAt(tempStart)=="\n"){selection.start=tempStart+1;break}}var toIndent=val.substring(selection.start,selection.end),lines=toIndent.split("\n"),i;if(e.shiftKey){for(i=0;i<lines.length;i+=1){if(lines[i].substring(0,tab.length)==tab){lines[i]=lines[i].substring(tab.length)}}toIndent=lines.join("\n");utils.editor.set(val.substring(0,selection.start)+toIndent+val.substring(selection.end));utils.cursor.set(selection.start,selection.start+toIndent.length)}else{for(i in lines){lines[i]=tab+lines[i]}toIndent=lines.join("\n");utils.editor.set(val.substring(0,selection.start)+toIndent+val.substring(selection.end));utils.cursor.set(selection.start,selection.start+toIndent.length)}}else{var left=val.substring(0,pos),right=val.substring(pos),edited=left+tab+right;if(e.shiftKey){if(val.substring(pos-tab.length,pos)==tab){edited=val.substring(0,pos-tab.length)+right;utils.editor.set(edited);utils.cursor.set(pos-tab.length)}}else{utils.editor.set(edited);utils.cursor.set(pos+tab.length);toReturn=false}}utils._callHook('tab:after')}return toReturn},enterKey:function(e){if(!utils.fenceRange()){return}if(e.keyCode==13){utils.preventDefaultEvent(e);utils._callHook('enter:before');var pos=utils.cursor.get(),val=utils.editor.get(),left=val.substring(0,pos),right=val.substring(pos),leftChar=left.charAt(left.length-1),rightChar=right.charAt(0),numTabs=utils.levelsDeep(),ourIndent="",closingBreak="",finalCursorPos,i;if(!numTabs){finalCursorPos=1}else{while(numTabs--){ourIndent+=tab}ourIndent=ourIndent;finalCursorPos=ourIndent.length+1;for(i=0;i<charSettings.keyMap.length;i+=1){if(charSettings.keyMap[i].open==leftChar&&charSettings.keyMap[i].close==rightChar){closingBreak=newLine}}}var edited=left+newLine+ourIndent+closingBreak+(ourIndent.substring(0,ourIndent.length-tab.length))+right;utils.editor.set(edited);utils.cursor.set(pos+finalCursorPos);utils._callHook('enter:after')}},deleteKey:function(e){if(!utils.fenceRange()){return}if(e.keyCode==8){utils.preventDefaultEvent(e);utils._callHook('delete:before');var pos=utils.cursor.get(),val=utils.editor.get(),left=val.substring(0,pos),right=val.substring(pos),leftChar=left.charAt(left.length-1),rightChar=right.charAt(0),i;if(utils.cursor.selection()===false){for(i=0;i<charSettings.keyMap.length;i+=1){if(charSettings.keyMap[i].open==leftChar&&charSettings.keyMap[i].close==rightChar){var edited=val.substring(0,pos-1)+val.substring(pos+1);utils.editor.set(edited);utils.cursor.set(pos-1);return}}var edited=val.substring(0,pos-1)+val.substring(pos);utils.editor.set(edited);utils.cursor.set(pos-1)}else{var sel=utils.cursor.selection(),edited=val.substring(0,sel.start)+val.substring(sel.end);utils.editor.set(edited);utils.cursor.set(pos)}utils._callHook('delete:after')}}},charFuncs={openedChar:function(_char,e){utils.preventDefaultEvent(e);utils._callHook('openChar:before');var pos=utils.cursor.get(),val=utils.editor.get(),left=val.substring(0,pos),right=val.substring(pos),edited=left+_char.open+_char.close+right;defaults.textarea.value=edited;utils.cursor.set(pos+1);utils._callHook('openChar:after')},closedChar:function(_char,e){var pos=utils.cursor.get(),val=utils.editor.get(),toOverwrite=val.substring(pos,pos+1);if(toOverwrite==_char.close){utils.preventDefaultEvent(e);utils._callHook('closeChar:before');utils.cursor.set(utils.cursor.get()+1);utils._callHook('closeChar:after');return true}return false}},action={filter:function(e){if(!utils.fenceRange()){return}var theCode=e.which||e.keyCode;if(theCode==39||theCode==40&&e.which===0){return}var _char=String.fromCharCode(theCode),i;for(i=0;i<charSettings.keyMap.length;i+=1){if(charSettings.keyMap[i].close==_char){var didClose=defaults.overwrite&&charFuncs.closedChar(charSettings.keyMap[i],e);if(!didClose&&charSettings.keyMap[i].open==_char&&defaults.autoOpen){charFuncs.openedChar(charSettings.keyMap[i],e)}}else if(charSettings.keyMap[i].open==_char&&defaults.autoOpen){charFuncs.openedChar(charSettings.keyMap[i],e)}}},listen:function(){if(defaults.replaceTab){utils.addEvent(defaults.textarea,'keydown',intercept.tabKey)}if(defaults.autoIndent){utils.addEvent(defaults.textarea,'keydown',intercept.enterKey)}if(defaults.autoStrip){utils.addEvent(defaults.textarea,'keydown',intercept.deleteKey)}utils.addEvent(defaults.textarea,'keypress',action.filter);utils.addEvent(defaults.textarea,'keydown',function(){utils._callHook('keydown')});utils.addEvent(defaults.textarea,'keyup',function(){utils._callHook('keyup')})}},init=function(opts){if(opts.textarea){utils._callHook('init:before',false);utils.deepExtend(defaults,opts);utils.defineNewLine();if(defaults.softTabs){tab=" ".repeat(defaults.tabSize)}else{tab="\t";utils.defineTabSize(defaults.tabSize)}action.listen();utils._callHook('init:after',false)}};this.destroy=function(){utils.removeEvent(defaults.textarea,'keydown',intercept.tabKey);utils.removeEvent(defaults.textarea,'keydown',intercept.enterKey);utils.removeEvent(defaults.textarea,'keydown',intercept.deleteKey);utils.removeEvent(defaults.textarea,'keypress',action.filter)};init(userOpts)};if(typeof module!=='undefined'&&module.exports){module.exports=Behave}if(typeof ender==='undefined'){this.Behave=Behave;this.BehaveHooks=BehaveHooks}if(typeof define==="function"&&define.amd){define("behave",[],function(){return Behave})}}).call(this);
//Countable
!function(t){"use strict";let n=[];const e=Array.prototype.forEach;function r(t){const n=[];let e=0;const r=t.length;for(;e<r;){const o=t.charCodeAt(e++);if(o>=55296&&o<=56319&&e<r){const r=t.charCodeAt(e++);56320==(64512&r)?n.push(((1023&o)<<10)+(1023&r)+65536):(n.push(o),e--)}else{n.push(o)}}return n}function o(t,n){const e=Object.prototype.toString.call(t),r="string"==typeof t||"[object NodeList]"===e||"[object HTMLCollection]"===e||1===t.nodeType,o="function"==typeof n;return r||console.error("Countable: Not a valid target"),o||console.error("Countable: Not a valid callback function"),r&&o}function c(t,n){let o=""+("string"==typeof t?t:"value"in t?t.value:t.textContent);(n=n||{}).stripTags&&(o=o.replace(/<\/?[a-z][^>]*>/gi,"")),n.ignore&&e.call(n.ignore,function(t){o=o.replace(t,"")});const c=o.trim();return{paragraphs:c?(c.match(n.hardReturns?/\n{2,}/g:/\n+/g)||[]).length+1:0,sentences:c?(c.match(/[.?!…]+./g)||[]).length+1:0,words:c?(c.replace(/['";:,.?¿\-!¡]+/g,"").match(/\S+/g)||[]).length:0,characters:c?r(c.replace(/\s/g,"")).length:0,all:r(o).length}}const i={on:function(t,r,i){if(o(t,r)){return Array.isArray(t)||(t=[t]),e.call(t,function(t){const e=function(){r.call(t,c(t,i))};n.push({element:t,handler:e}),e(),t.addEventListener("input",e)}),this}},off:function(t){if(o(t,function(){})){return Array.isArray(t)||(t=[t]),n.filter(function(n){return-1!==t.indexOf(n.element)}).forEach(function(t){t.element.removeEventListener("input",t.handler)}),n=n.filter(function(n){return-1===t.indexOf(n.element)}),this}},count:function(t,n,r){if(o(t,n)){return Array.isArray(t)||(t=[t]),e.call(t,function(t){n.call(t,c(t,r))}),this}},enabled:function(t){return void 0===t.length&&(t=[t]),n.filter(function(n){return-1!==t.indexOf(n.element)}).length===t.length}};"object"==typeof exports?module.exports=i:"function"==typeof define&&define.amd?define(function(){return i}):t.Countable=i}(this);
//Init
(function(){"use strict";
  var editor = new Behave({textarea: document.querySelector('#code'), tabSize: 2});
  Countable.on(document.querySelector('#code'), function (counter) {
    document.querySelector('#stats').innerHTML = counter.paragraphs + " Paragraphs, " + counter.sentences + " Sentences, " + counter.words + " Words, " + counter.characters + " Characters, " + counter.all + " Total, 999 Limit, ";
  })
  var observe;
  if (window.attachEvent) {
    observe = function (element, event, handler) { element.attachEvent('on' + event, handler); };
  }
  else {
    observe = function (element, event, handler) { element.addEventListener(event, handler, false); };
  }
  function textareaAutoResizeInit() {
    var text = document.getElementById('code');
    function resize() {
      text.style.height = 'auto';
      text.style.height = (text.scrollHeight + 1) + 'px';
    }
    function delayedResize() {
      window.setTimeout(resize, 0); // 0-timeout to get the already changed text
    }
    observe(text, 'change',  resize);
    observe(text, 'cut',     delayedResize);
    observe(text, 'paste',   delayedResize);
    observe(text, 'drop',    delayedResize);
    observe(text, 'keydown', delayedResize);
    text.focus();
    text.select();
    resize();
  }
  textareaAutoResizeInit();
  function textareaJsonValidation(id) {
      // Create a textarea with JSON Validation
      var ta = document.getElementById(id);
      var el = document.createElement('small');
      if ( !!ta ) {
          el.innerHTML   = "?";
          el.style.color = "gray";
          ta.parentNode.insertBefore(el, ta.nextSibling);
          ta.onkeydown   = function() { checkJson() };
          ta.onmousedown = function() { checkJson() };
          function checkJson() {
              try {
                  JSON.parse(ta.value);
              } catch(error) {  //the json is not ok
                  el.innerHTML   = "&cross; Invalid JSON";
                  el.style.color = "red";
                  return false;
              }  //the json is ok
              el.innerHTML   = "&check; Valid JSON";
              el.style.color = "green";
              return true;
          };
    };
  };
  textareaJsonValidation("filejson");
})();
</script>
